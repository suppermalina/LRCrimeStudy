length(levels(cluster_data$description)))
matrix(cluster_data, nrow = length(levels(cluster_data$district)), byrow = TRUE)
matrix(cluster_data$counts, nrow = length(levels(cluster_data$district)), byrow = TRUE)
ength(levels(cluster_data$district))
length(levels(cluster_data$district))
test <- matrix(cluster_data$counts, nrow = length(levels(cluster_data$district)), byrow = TRUE)
label(cluster_data$district)
cluster_data
levels(cluster_data$district)
colnames(test) <- levels(cluster_data$district)
rownames(test) <- levels(cluster_data$district)
colnames(test) <- levels(cluster_data$description)
levels(cluster_data$description)
install.packages("tydir")
install.packages("tidyr")
library(tidyr)
library(tidyr)
cluster_data
nestdf <- cluster_data %>% nest(v3:v3)
nestdf <- cluster_data %>% nest(3 : 3)
nestdf
as.data.frame(cluster_data %>% group_by(district) %>% nest(as.character(levels(cluster_data$description))))
as.data.frame(cluster_data %>% group_by(district) %>% nest(as.character(cluster_data$description)))
as.data.frame(cluster_data  %>% nest(as.character(cluster_data$description)))
as.data.frame(cluster_data  %>% nest(-district, -description))
cluster_data  %>% nest(-district, -description)
cluster_data  %>% group_by(district) %>% nest(-district, -description)
as.data.frame(cluster_data  %>% group_by(district) %>% nest(-district, -description))
as.matrix(cluster_data  %>% group_by(district) %>% nest(-district, -description))
as.data.frame(cluster_data  %>% group_by(district) %>% nest(-district, -description))
test <- as.data.frame(cluster_data  %>% group_by(district) %>% nest(-district, -description))
test
as.matrix(test)
unlist(test$data)
cluster_data  %>% group_by(district, description) %>% nest(-district, -description)
test <- as.data.frame(cluster_data  %>% group_by(district) %>% nest(-district, -description))
cluster_data  %>% group_by(district) %>% nest(-district, -description)
as.matrix(test$data)
as.matrix(unlist(test$data))
cluster_data %>% group_by(district) %>% summarize(by = levels(cluster_data$description), FUN = length)
levels(cluster_data$description)
cluster_data %>% group_by(district) %>% summarise_each(levels(cluster_data$description))
cluster_data %>% group_by(district) %>% summarise_all(levels(cluster_data$description))
?summarise_all
cluster_data %>% group_by(district) %>% summarise_all(sum, levels(cluster_data$description))
cluster_data %>% group_by(district) %>% summarise_all(sum, list(levels(cluster_data$description)))
cluster_data %>% group_by(district) %>% summarise_all(sum)
cluster_data %>% group_by(district) %>% summarise_all()
cluster_data %>% group_by(district) %>% summarise_all(list(levels(cluster_data$description)))
cluster_data %>% group_by(district) %>% summarise_all(as.character(levels(cluster_data$description)))
cluster_data %>% group_by(district) %>% summarise_all(var = list(levels(cluster_data$description)))
cluster_data %>% group_by(district) %>% summarise_all(funs = sum,var = list(levels(cluster_data$description)))
cluster_data %>% group_by(district)
test <- cluster_data %>% group_by(district)
class(test)
test <- cluster_data %>% group_by(district)
class(test)
test1 <- cluster_data %>% group_by(district)
class(test1)
test1$description
as_tibble(test1)
as_tibble(test1) %>% nest(description)
cluster_data  %>% group_by(description)
cluster_data  %>% nest(description)
cluster_data  %>% nest(description)
cluster_data  %>% nest(-description)
test <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
test
cluster_data %>% group_by(district)  %>% nest(-description)
test <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
test
test$data
unlist(test$data[[1]])
data.frame(test$data[[1]])
length(test$data)
as.data.frame.Date(test$data)
trans_1 <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
trans_1$data
trans_2 <- as.data.frame.Date(test$data)
data.matrix(trans_2)
trans_2
length(trans_2[1, ])
trans_2
separate_rows(trans_2, test$data, convert = TRUE)
trans_2
names(trans_2) <- c("dat")
separate_rows(trans_2, dat, convert = TRUE)
separate(trans_2, dat, list(levels(cluster_data$description)))
separate(trans_2, dat, as.character(levels(cluster_data$description)))
dat
trans_2
separate(trans_2, dat, as.character(levels(cluster_data$description)), sep = ",")
trans_3 <- separate(trans_2, dat, as.character(levels(cluster_data$description)), sep = ",")
trans_3[, 1]
trans_3[gsub("list.*.c=", "")]
for (i in 1 : length(trans_3[, 1])) {
gsub("list.c(", "", trans_3[, 1][i])
}
for (i in 1 : length(trans_3[, 1])) {
gsub("list.c\\(", "", trans_3[, 1][i])
}
trans_3
for (i in 1 : length(trans_3[, 1])) {
gsub("list.*.c\\(", "", trans_3[, 1][i])
}
trans_3
for (i in 1 : length(trans_3[, 1])) {
gsub("list.*.c\\(", "", trans_3[, 1][i])
print(trans_3[, 1][i])
}
for (i in 1 : length(trans_3[, 1])) {
trans_3[, 1][i] <- gsub("list.*.c\\(", "", trans_3[, 1][i])
print(trans_3[, 1][i])
}
for (i in 1 : length(trans_3[, 1])) {
trans_3[, 1][i] <- gsub("list.*.c\\(", "", trans_3[, 1][i])
if (grepl("\\)", trans_3[, 1][i])) {
trans_3[, 1][i] <- gsub("list.*.[[:space:]]", "", trans_3[, 1][i])
trans_3[, 1][i] <- gsub("\\)", "", trans_3[, 1][i])
}
print(trans_3[, 1][i])
}
trans_3
names(trans_3) <- as.character(levels(cluster_data$district))
levels(cluster_data$district
colnames(trans_3) <- as.character(levels(cluster_data$district))
trans_final <- data.frame(cbind(as.character(levels(cluster_data)), trans_3), stringsAsFactors = F)
as.character(levels(cluster_data))
trans_final <- data.frame(cbind(as.character(levels(cluster_data$district)), trans_3), stringsAsFactors = F)
library(data.table)
trans_final <- setattr(trans_3, name = as.character(levels(cluster_data$district)))
trans_final <- setattr(trans_3, "row.names", name = as.character(levels(cluster_data$district)))
trans_final <- setattr(trans_3, "row.names", name = list(as.character(levels(cluster_data$district))))
trans_final <- setattr(trans_3, "row.names", name = levels(cluster_data$district))
levels(cluster_data$district)
trans_final <- setattr(trans_3, "row.names", name = c("40", "41", "42", "43", "50", "51", "52", "53", "54", "60", "61", "62", "63", "64", "70",
"71", "72", "80", "81", "82", "90", "91", "92", "93", "CW"))
trans_final <- data.frame(cbind(as.character(levels(cluster_data$district)), trans_3), stringsAsFactors = F)
trans_final
trans_final <- data.frame(cbind(district = as.character(levels(cluster_data$district)), trans_3), stringsAsFactors = F)
trans_final <- data.frame(cbind(district = as.character(levels(cluster_data$district)), trans_3), stringsAsFactors = F)
trans_final
trans_final[is.na(trans_final)] <- "0"
trans_final
dis <- dist(cluster_data)
dis
fviz_dist(dis, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
dis <- dist(trans_final)
dis
fviz_dist(dis, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
row.names(trans_3) <- as.character(levels(cluster_data$district))
trans_3
trans_3
trans_final[is.na(trans_3)] <- "0"
trans_final <- trans_3
trans_final[is.na(trans_final)] <- "0"
trans_final
dis <- dist(trans_final)
fviz_dist(dis, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
cluster1 <- hclust(dist(trans_final), method = "single")
plot(cluster1, hang = -1)
set.seed(321)
km <- kmeans(scale(trans_final), 4, nstart = 25)
km
km <- kmeans(scale(as.numeric(trans_final)), 4, nstart = 25)
km_dt <- trans_final
length(km_dt)
for (i in 1 : length(km_dt)) {
km_dt[, i] <- as.numeric(km_dt[, i])
}
km <- kmeans(km_dt, 4, nstart = 25)
km
km_dt[is.na(km_dt)] <- 0
km <- kmeans(km_dt, 4, nstart = 25)
km
fviz_cluster(km, data = df,
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"),
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot"
)
fviz_cluster(km, data = km_dt,
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"),
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot"
)
km_dt
km_dt <- scale(trans_final)
km_dt <- scale(km_dt)
fviz_cluster(km, data = km_dt,
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"),
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot"
)
fviz_cluster(km, data = scale(km_dt),
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"),
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot"
)
trans_final
trans_3
cluster_data
trans_1
trans_2
as.character(levels(cluster_data$description))
trans_2
unlist(trans_2[1, ])
unlist(trans_2[2, ])
length(unlist(trans_2[2, ]))
class(unlist(trans_2[2, ]))
? unlist
class(unlist(trans_2[2, ], use.names = FALSE))
unlist(trans_2[2, ], use.names = FALSE)
?separate
for (i in 1 : length(trans_2)) {
trans_2[i, ] <- unlist(trans_2[i, ], use.names = FALSE)
}
for (i in 1 : length(trans_2)) {
trans_2[i, ] <- list(unlist(trans_2[i, ]), use.names = FALSE)
}
trans_2
for (i in 1 : length(trans_2)) {
trans_2[i, ] <- as.data.frame(unlist(trans_2[i, ]), use.names = FALSE)
}
trans_2
trans_3 <- separate(trans_2, dat, as.character(levels(cluster_data$description)), sep = ",")
trans_3
cluster_data <- data.frame(cbind(total_incidents$incidents_District, total_incidents$incidents_Description), stringsAsFactors = FALSE)
cluster_data <- na.omit(cluster_data)
names(cluster_data) <- c("district", "description")
cluster_data <- ddply(cluster_data, c("district", "description"), summarise, N = length(description))
cluster_data$N <- cluster_data$N / 100000
cluster_data <- na.omit(cluster_data)
cluster_data <- data.frame(district = cluster_data$district, description = cluster_data$description,
counts = as.numeric(cluster_data$N), stringsAsFactors = TRUE)
trans_1 <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
trans_1$data
trans_2 <- as.data.frame.Date(test$data)
for (i in 1 : length(trans_2)) {
trans_2[i, ] <- as.data.frame(unlist(trans_2[i, ]), use.names = FALSE)
}
total_incidents <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/Crime_records_Of_LR_2015-2018_v3.csv", head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
cluster_data <- data.frame(cbind(total_incidents$incidents_District, total_incidents$incidents_Description), stringsAsFactors = FALSE)
cluster_data <- na.omit(cluster_data)
names(cluster_data) <- c("district", "description")
cluster_data <- ddply(cluster_data, c("district", "description"), summarise, N = length(description))
cluster_data$N <- cluster_data$N / 100000
cluster_data <- na.omit(cluster_data)
cluster_data <- data.frame(district = cluster_data$district, description = cluster_data$description,
counts = as.numeric(cluster_data$N), stringsAsFactors = TRUE)
trans_1 <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
trans_1$data
trans_2 <- as.data.frame.Date(test$data)
trans_1
cluster_data <- data.frame(cbind(total_incidents$incidents_District, total_incidents$incidents_Description), stringsAsFactors = FALSE)
cluster_data <- na.omit(cluster_data)
names(cluster_data) <- c("district", "description")
cluster_data <- ddply(cluster_data, c("district", "description"), summarise, N = length(description))
cluster_data$N <- cluster_data$N / 100000
cluster_data <- na.omit(cluster_data)
cluster_data <- data.frame(district = cluster_data$district, description = cluster_data$description,
counts = as.numeric(cluster_data$N), stringsAsFactors = TRUE)
trans_1 <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
trans_1$data
trans_2 <- as.data.frame.Date(trans_1$data)
for (i in 1 : length(trans_2)) {
trans_2[i, ] <- as.data.frame(unlist(trans_2[i, ]), use.names = FALSE)
}
trans_2
for (i in 1 : length(trans_2)) {
trans_2[i, ] <- as.data.frame(unlist(trans_2[i, ]), use.names = FALSE)
}
names(trans_2) <- c("dat")
trans_2
trans_3 <- separate(trans_2, dat, as.character(levels(cluster_data$description)), sep = ",")
trans_3
for (i in 1 : length(trans_2)) {
tmp <- c(tmp, unlist(trans_2[i, ], use.names = FALSE))
}
tmp <- NULL
for (i in 1 : length(trans_2)) {
tmp <- c(tmp, unlist(trans_2[i, ], use.names = FALSE))
}
tmp
for (i in 1 : length(trans_2)) {
tmp <- c(tmp, list(unlist(trans_2[i, ], use.names = FALSE)))
}
tmp <- NULL
for (i in 1 : length(trans_2)) {
tmp <- c(tmp, list(unlist(trans_2[i, ], use.names = FALSE)))
}
tmp
trans_2
length(trans_2)
tmp <- NULL
for (i in 1 : length(trans_2)) {
tmp <- c(tmp, list(unlist(trans_2[i, ], use.names = FALSE)))
}
tmp
tmp <- c("")
for (i in 1 : length(trans_2)) {
tmp <- c(tmp, list(unlist(trans_2[i, ], use.names = FALSE)))
}
tmp
tmp_vec <- unlist(trans_2[i, ], use.names = FALSE)
tmp_vec
tmp_vec <- unlist(trans_2[1, ], use.names = FALSE)
tmp_vec <- unlist(trans_2[2, ], use.names = FALSE)
cluster_data <- data.frame(cbind(total_incidents$incidents_District, total_incidents$incidents_Description), stringsAsFactors = FALSE)
cluster_data <- na.omit(cluster_data)
names(cluster_data) <- c("district", "description")
cluster_data <- ddply(cluster_data, c("district", "description"), summarise, N = length(description))
cluster_data$N <- cluster_data$N / 100000
cluster_data <- na.omit(cluster_data)
cluster_data <- data.frame(district = cluster_data$district, description = cluster_data$description,
counts = as.numeric(cluster_data$N), stringsAsFactors = TRUE)
trans_1 <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
trans_1$data
trans_2 <- as.data.frame.Date(trans_1$data)
trans_2
tmp <- c("")
for (i in 1 : length(trans_2)[1, ]) {
tmp <- c(tmp, list(unlist(trans_2[1, ][i], use.names = FALSE)))
}
tmp <- c("")
for (i in 1 : length(trans_2[1, ])) {
tmp <- c(tmp, list(unlist(trans_2[1, ][i], use.names = FALSE)))
}
tmp
length(trans_2[1, ])
tmp <- c("")
for (i in 1 : length(trans_2[, 1])) {
tmp <- c(tmp, list(unlist(trans_2[1, ][i], use.names = FALSE)))
}
tmp
tmp <- c("")
for (i in 1 : length(trans_2[, 1])) {
tmp <- c(tmp, list(unlist(trans_2[, 1][i], use.names = FALSE)))
}
tmp
class(tmp)
tmp_try <- data.frame(tmp)
cluster_data <- data.frame(cbind(total_incidents$incidents_District, total_incidents$incidents_Description), stringsAsFactors = FALSE)
cluster_data <- na.omit(cluster_data)
names(cluster_data) <- c("district", "description")
cluster_data <- ddply(cluster_data, c("district", "description"), summarise, N = length(description))
cluster_data$N <- cluster_data$N / 100000
cluster_data <- na.omit(cluster_data)
cluster_data <- data.frame(district = cluster_data$district, description = cluster_data$description,
counts = as.numeric(cluster_data$N), stringsAsFactors = TRUE)
trans_1 <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
trans_1$data
trans_2 <- as.data.frame.Date(trans_1$data)
tmp <- c("")
for (i in 1 : length(trans_2[, 1])) {
print(unlist(trans_2[, 1][i], use.names = FALSE))
tmp <- c(tmp, list(unlist(trans_2[, 1][i], use.names = FALSE)))
}
tmp[1]
tmp[2]
tmp[1]
tmp[[1]]
tmp[1,]
tmp <- NULL
for (i in 1 : length(trans_2[, 1])) {
print(unlist(trans_2[, 1][i], use.names = FALSE))
tmp <- c(tmp, list(unlist(trans_2[, 1][i], use.names = FALSE)))
}
tmp[[1]]
dt<-rbindlist(tmp, use.names=FALSE, fill=TRUE)
dt
dt<-rbind(tmp, use.names=FALSE, fill=TRUE)
dt
dt <- as.data.frame.list(tmp)
rbindlist(tmp, fill = TRUE)
tmp
rbindlist(tmp, fill = TRUE)
bind_rows(tmp)
cluster_data <- data.frame(cbind(total_incidents$incidents_District, total_incidents$incidents_Description), stringsAsFactors = FALSE)
cluster_data <- na.omit(cluster_data)
names(cluster_data) <- c("district", "description")
cluster_data <- ddply(cluster_data, c("district", "description"), summarise, N = length(description))
cluster_data$N <- cluster_data$N / 100000
cluster_data <- na.omit(cluster_data)
cluster_data <- data.frame(district = cluster_data$district, description = cluster_data$description,
counts = as.numeric(cluster_data$N), stringsAsFactors = TRUE)
trans_1 <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
trans_1$data
trans_2 <- as.data.frame.Date(trans_1$data)
names(trans_2) <- c("dat")
trans_3 <- separate(trans_2, dat, as.character(levels(cluster_data$description)), sep = ",")
for (i in 1 : length(trans_3[, 1])) {
trans_3[, 1][i] <- gsub("list.*.c\\(", "", trans_3[, 1][i])
if (grepl("\\)", trans_3[, 1][i])) {
trans_3[, 1][i] <- gsub("list.*.[[:space:]]", "", trans_3[, 1][i])
trans_3[, 1][i] <- gsub("\\)", "", trans_3[, 1][i])
}
print(trans_3[, 1][i])
}
row.names(trans_3) <- as.character(levels(cluster_data$district))
trans_final <- trans_3
trans_final[is.na(trans_final)] <- "0"
dis <- dist(trans_final)
fviz_dist(dis, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
cluster1 <- hclust(dist(trans_final), method = "single")
plot(cluster1, hang = -1)
set.seed(321)
km_dt <- trans_final
for (i in 1 : length(km_dt)) {
km_dt[, i] <- as.numeric(km_dt[, i])
}
km_dt[is.na(km_dt)] <- 0
km_dt <- scale(km_dt)
km <- kmeans(km_dt, 4, nstart = 25)
km
fviz_cluster(km, data = scale(km_dt),
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"),
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot"
)
set.seed(321)
km_dt <- trans_final
for (i in 1 : length(km_dt)) {
km_dt[, i] <- as.numeric(km_dt[, i])
}
km_dt[is.na(km_dt)] <- 0
km_dt <- scale(km_dt)
set.seed(321)
km_dt <- trans_final
for (i in 1 : length(km_dt)) {
km_dt[, i] <- as.numeric(km_dt[, i])
}
km_dt[is.na(km_dt)] <- 0
km <- kmeans(km_dt, 4, nstart = 25)
km
fviz_cluster(km, data = scale(km_dt),
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"),
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot"
)
km
cluster_data <- data.frame(cbind(total_incidents$incidents_District, total_incidents$incidents_Description), stringsAsFactors = FALSE)
cluster_data <- na.omit(cluster_data)
names(cluster_data) <- c("district", "description")
cluster_data <- ddply(cluster_data, c("district", "description"), summarise, N = length(description))
#cluster_data$N <- cluster_data$N / 100000
cluster_data <- na.omit(cluster_data)
cluster_data <- data.frame(district = cluster_data$district, description = cluster_data$description,
counts = as.numeric(cluster_data$N), stringsAsFactors = TRUE)
trans_1 <- as.data.frame(cluster_data %>% group_by(district)  %>% nest(-description))
trans_1$data
trans_2 <- as.data.frame.Date(trans_1$data)
names(trans_2) <- c("dat")
trans_3 <- separate(trans_2, dat, as.character(levels(cluster_data$description)), sep = ",")
for (i in 1 : length(trans_3[, 1])) {
trans_3[, 1][i] <- gsub("list.*.c\\(", "", trans_3[, 1][i])
if (grepl("\\)", trans_3[, 1][i])) {
trans_3[, 1][i] <- gsub("list.*.[[:space:]]", "", trans_3[, 1][i])
trans_3[, 1][i] <- gsub("\\)", "", trans_3[, 1][i])
}
print(trans_3[, 1][i])
}
row.names(trans_3) <- as.character(levels(cluster_data$district))
trans_final <- trans_3
trans_final[is.na(trans_final)] <- "0"
dis <- dist(trans_final)
fviz_dist(dis, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
cluster1 <- hclust(dist(trans_final), method = "single")
plot(cluster1, hang = -1)
set.seed(321)
km_dt <- trans_final
for (i in 1 : length(km_dt)) {
km_dt[, i] <- as.numeric(km_dt[, i])
}
km_dt[is.na(km_dt)] <- 0
km <- kmeans(km_dt, 4, nstart = 25)
km
fviz_cluster(km, data = scale(km_dt),
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"),
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot"
)
######################
#we have to re-label all descriptions. currently we have 11 descriptions.
#however, if we use all these 11 types to do machine learning, we will fall into
#the trap of overfit. So, we re-classfied all crimes into two types:
#property, violent
#property break down into breaking in, theft, etc
#violent includes rape, mudur, etc.
detail_types <- levels(as.factor(total_incidents$incidents_Description))
proper_list <- c("ALL OTHER LARCENY", "BREAK IN", "BURGLARY", "BURGLARY", "THEFT")
violent_list <- c("ASSAULT", "DISCHARGE  A FIREARM FROM A VEHICLE", "MURDER & NONNEGLIGENT MANSLAUGHTER",
"RAPE", "TERR", "BATTERY", "EXPOSING ANOTHER PERS", "ROBBERY")
for (i in 1 : length(total_incidents$incidents_Description)) {
if (total_incidents$incidents_Description[i] %in% proper_list) {
total_incidents$incidents_Description[i] <- "PROPERTY"
} else if (total_incidents$incidents_Description[i] %in% violent_list) {
total_incidents$incidents_Description[i] <- "VIOLENT"
} else {
total_incidents <- total_incidents[-i, ]
}
}
daily_geom_crime <- data.frame(cbind(total_incidents$incidents_ymd, total_incidents$year, total_incidents$incidents_month,
total_incidents$incidents_Lon, total_incidents$incidents_Lat, total_incidents$incidents_District,
total_incidents$incidents_Description), stringsAsFactors = FALSE)
names(daily_geom_crime) <- c("ymd", "year", "month", "lon", "lat", "district", "description")
set.seed(54321)
clusters <- kmeans(daily_geom_crime[, c(4 : 6)], 3)
daily_geom_crime[is.na(daily_geom_crime), ] <- 0
daily_geom_crime[is.na(daily_geom_crime)] <- 0
clusters <- kmeans(daily_geom_crime[, c(4 : 6)], 3)
head(cluster_data)
combination_infor_2015
