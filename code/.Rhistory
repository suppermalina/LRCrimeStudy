if (is.na(input)) {
return(NA)
}
if (is.null(input)) {
return(NA)
}
if (grepl("\\/", input)) {
gsub("\\/", "\\-")
}
brkdate <- strsplit(input, "\\-")
reformed_ymd <- paste(c("20", brkdate[[1]][3], "-", brkdate[[1]][1], "-", brkdate[[1]][2]),
collapse = "")
return(reformed_ymd)
}
test <- transfer2ymd(daily_climate$date[967])
test
daily_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$DAILYMaximumDryBulbTemp, climate$DAILYMinimumDryBulbTemp, stringsAsFactors = F)
monthly_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMeanTemp, stringsAsFactors = F)
colnames(daily_climate) <- c("date", "lon", "lat", "dailyMax", "dailyMin")
colnames(monthly_climate) <- c("date", "lon", "lat", "monthlyMax", "monthlyMean", "monthlyMax")
#removing na
daily_climate <- daily_climate[!is.na(daily_climate$dailyMax), ]
daily_climate <- daily_climate[!is.na(daily_climate$dailyMin), ]
class(length(daily_climate$date))
for (i in 1 : length(daily_climate$date)) {
print(daily_climate$date[i])
daily_climate$date[i] <- gsub("\\/", "\\-", daily_climate$date[i])
print(daily_climate$date[i])
daily_climate$date[i] <- gsub(" .[0-9].*\\:.*", "", daily_climate$date[i])
print(daily_climate$date[i])
daily_climate$date[i] <- transfer2ymd(daily_climate$date[i])
}
daily_climate$lat <- NULL
daily_climate$lon <- NULL
daily_climate
write.csv(daily_climate, "/Users/mali/Documents/myGit/LRCrimeStudy/data/purged_climate_Of_LR_2015-2018.csv")
write.csv(daily_climate, "/Users/mali/Documents/myGit/LRCrimeStudy/data/purged_daily_climate_Of_LR_2015-2018.csv")
monthly_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMeanTemp, stringsAsFactors = F)
colnames(monthly_climate) <- c("date", "lon", "lat", "monthlyMin", "monthlyMean", "monthlyMax")
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMin), ]
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMax), ]
class(length(monthly_climate$date))
monthly_climate$date
for (i in 1 : length(monthly_climate$date)) {
print(monthly_climate$date[i])
monthly_climate$date[i] <- gsub("\\/", "\\-", monthly_climate$date[i])
print(daily_climate$date[i])
monthly_climate$date[i] <- gsub(" .[0-9].*\\:.*", "", monthly_climate$date[i])
print(monthly_climate$date[i])
monthly_climate$date[i] <- transfer2ymd(monthly_climate$date[i])
}
monthly_climate
monthly_climate$lat <- NULL
monthly_climate$lon <- NULL
test <- year(monthly_climate$date)
test
monthly_climate$year <- year(monthly_climate$date)
monthly_climate$month <- month(monthly_climate$date)
monthly_climate
monthly_climate$date <- NULL
write.csv(daily_climate, "/Users/mali/Documents/myGit/LRCrimeStudy/data/purged_monthly_climate_Of_LR_2015-2018.csv")
factor(monthly_climate$month)
factor(monthly_climate$month, labels = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL",
"AUG", "SEP", "OCT", "NOV", "DEC"))
write.csv(daily_climate, "/Users/mali/Documents/myGit/LRCrimeStudy/data/purged_monthly_climate_Of_LR_2015-2018.csv")
tmp_ttl <- read.table("C/Users/mali/Documents/myGit/LRCrimeStudy/data/Crime_records_Of_LR_2015-2018.csv", head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
tmp_ttl <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/Crime_records_Of_LR_2015-2018.csv", head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
for (i in 1 : length(tmp_ttl$incidents_month)) {
print(tmp_ttl$incidents_month[i])
if (tmp_ttl$incidents_month[i] == "1" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "JAN"
}
if (tmp_ttl$incidents_month[i] == "2" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "FEB"
}
if (tmp_ttl$incidents_month[i] == "3" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "MAR"
}
if (tmp_ttl$incidents_month[i] == "4" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "APR"
}
if (tmp_ttl$incidents_month[i] == "5" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "MAY"
}
if (tmp_ttl$incidents_month[i] == "6" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "JUN"
}
if (tmp_ttl$incidents_month[i] == "7" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "JUL"
}
if (tmp_ttl$incidents_month[i] == "8" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "AUG"
}
if (tmp_ttl$incidents_month[i] == "9" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "SEP"
}
if (tmp_ttl$incidents_month[i] == "10" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "OCT"
}
if (tmp_ttl$incidents_month[i] == "11" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "NOV"
}
if (tmp_ttl$incidents_month[i] == "12" & !is.na(tmp_ttl$incidents_month[i])) {
tmp_ttl$incidents_month[i] <- "DEC"
}
}
for (i in 1 : length(tmp_ttl$incidents_month)) {
print(tmp_ttl$incidents_month[i])
if (grepl("9", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "SEP"
}
if (grepl("jan", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "JAN"
}
if (grepl("feb", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "FEB"
}
if (grepl("mar", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "MAR"
}
if (grepl("apr", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "APR"
}
if (grepl("may", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "MAY"
}
if (grepl("jun", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "JUN"
}
if (grepl("jul", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "JUL"
}
if (grepl("aug", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "AUG"
}
if (grepl("Sep", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "SEP"
}
if (grepl("oct", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "OCT"
}
if (grepl("nov", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "NOV"
}
if (grepl("dec", tmp_ttl$incidents_month[i], ignore.case = TRUE)) {
tmp_ttl$incidents_month[i] <- "DEC"
}
}
tmp_ttl$incidents_month <- factor(tmp_ttl$incidents_month, levels = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL",
"AUG", "SEP", "OCT", "NOV", "DEC"))
class(tmp_ttl$incidents_wdays)
tmp_2015 <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/Little_Rock_Police_Department_Statistics_2015.csv",
head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
head(tmp_2015)
tmp_date_2015 <- data.frame(tmp_2015$Incident.Date, stringsAsFactors = FALSE)
#############
##test processing ymd format with transfer2ymd
############
for (i in 1 : length(tmp_2015$Incident.Date)) {
tmp <- transfer2ymd(tmp_2015$Incident.Date[i])
print(tmp)
tmp_2015$Incident.Date[i] <- tmp
}
tmp_2015 <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/Little_Rock_Police_Department_Statistics_2015.csv",
head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
head(tmp_2015)
tmp_date_2015 <- data.frame(tmp_2015$Incident.Date, stringsAsFactors = FALSE)
for (i in 1 : length(tmp_2015$Incident.Date)) {
tmp <- transfer2ymd(tmp_2015$Incident.Date[i])
print(tmp)
tmp_2015$Incident.Date[i] <- tmp
}
tmp_2015 <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/Little_Rock_Police_Department_Statistics_2015.csv",
head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
head(tmp_2015)
tmp_date_2015 <- data.frame(tmp_2015$Incident.Date, stringsAsFactors = FALSE)
#transform the format of date into the one used by 2017 and 2018
for (i in 1 : length(tmp_2015$Incident.Date)) {
if (grepl("\\-", tmp_2015$Incident.Date[i])) {
tmp <- gsub("\\-.*", "", tmp_2015$Incident.Date[i])
print(tmp)
tmp_2015$Incident.Date[i] <- tmp
}
}
#############
##test processing ymd format with transfer2ymd
############
for (i in 1 : length(tmp_2015$Incident.Date)) {
tmp <- transfer2ymd(tmp_2015$Incident.Date[i])
print(tmp)
tmp_2015$Incident.Date[i] <- tmp
}
tmp_2015 <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/Little_Rock_Police_Department_Statistics_2015.csv",
head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
head(tmp_2015)
tmp_date_2015 <- data.frame(tmp_2015$Incident.Date, stringsAsFactors = FALSE)
#transform the format of date into the one used by 2017 and 2018
for (i in 1 : length(tmp_2015$Incident.Date)) {
if (grepl("\\-", tmp_2015$Incident.Date[i])) {
tmp <- gsub("\\-.*", "", tmp_2015$Incident.Date[i])
print(tmp)
tmp_2015$Incident.Date[i] <- tmp
}
}
#############
##test processing ymd format with transfer2ymd
############
for (i in 1 : length(tmp_2015$Incident.Date)) {
tmp <- transfer2ymd(tmp_2015$Incident.Date[i])
print(tmp)
tmp_2015$Incident.Date[i] <- tmp
}
daily_temp <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/purged_daily_climate_Of_LR_2015-2018.csv",
head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
daily_temp
daily_climate
daily_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$DAILYMaximumDryBulbTemp, climate$DAILYMinimumDryBulbTemp, stringsAsFactors = F)
monthly_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMeanTemp, stringsAsFactors = F)
colnames(daily_climate) <- c("date", "lon", "lat", "dailyMax", "dailyMin")
colnames(monthly_climate) <- c("date", "lon", "lat", "monthlyMin", "monthlyMean", "monthlyMax")
#
daily_climate
daily_climate <- daily_climate[!is.na(daily_climate$dailyMax), ]
daily_climate <- daily_climate[!is.na(daily_climate$dailyMin), ]
class(length(daily_climate$date))
daily_climate <- daily_climate[!is.na(daily_climate$dailyMax), ]
daily_climate <- daily_climate[!is.na(daily_climate$dailyMin), ]
daily_climate
for (i in 1 : length(daily_climate$date)) {
print(daily_climate$date[i])
daily_climate$date[i] <- gsub("\\/", "\\-", daily_climate$date[i])
print(daily_climate$date[i])
daily_climate$date[i] <- gsub(" .[0-9].*\\:.*", "", daily_climate$date[i])
print(daily_climate$date[i])
daily_climate$date[i] <- transfer2ymd(daily_climate$date[i])
}
daily_climate
for (indicator in 1 : length(daily_climate$date)) {
i = indicator + 1
while (i <= length(daily_climate$date) & (daily_climate$date[i] == daily_climate$date[indicator])) {
daily_climate <- daily_climate[-i, ]
i = i + 1
}
indicator = i
}
daily_climate
daily_climate$lat <- NULL
daily_climate$lon <- NULL
write.csv(daily_climate, "/Users/mali/Documents/myGit/LRCrimeStudy/data/purged_daily_climate_Of_LR_2015-2018.csv")
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMin), ]
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMax), ]
class(length(monthly_climate$date))
for (i in 1 : length(monthly_climate$date)) {
print(monthly_climate$date[i])
monthly_climate$date[i] <- gsub("\\/", "\\-", monthly_climate$date[i])
print(daily_climate$date[i])
monthly_climate$date[i] <- gsub(" .[0-9].*\\:.*", "", monthly_climate$date[i])
print(monthly_climate$date[i])
monthly_climate$date[i] <- transfer2ymd(monthly_climate$date[i])
}
monthly_climate$lat <- NULL
monthly_climate$lon <- NULL
monthly_climate$date <- NULL
monthly_climate$year <- year(monthly_climate$date)
monthly_climate$month <- month(monthly_climate$date)
factor(monthly_climate$month, labels = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL",
"AUG", "SEP", "OCT", "NOV", "DEC"))
monthly_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMeanTemp, stringsAsFactors = F)
monthly_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMaxTemp, stringsAsFactors = F)
daily_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$DAILYMaximumDryBulbTemp, climate$DAILYMinimumDryBulbTemp, stringsAsFactors = F)
mo
climate <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/climate.csv", head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
monthly_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMaxTemp, stringsAsFactors = F)
monthly_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMaximumTemp, stringsAsFactors = F)
colnames(monthly_climate) <- c("date", "lon", "lat", "monthlyMin", "monthlyMean", "monthlyMax")
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMin), ]
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMax), ]
class(length(monthly_climate$date))
for (i in 1 : length(monthly_climate$date)) {
print(monthly_climate$date[i])
monthly_climate$date[i] <- gsub("\\/", "\\-", monthly_climate$date[i])
print(daily_climate$date[i])
monthly_climate$date[i] <- gsub(" .[0-9].*\\:.*", "", monthly_climate$date[i])
print(monthly_climate$date[i])
monthly_climate$date[i] <- transfer2ymd(monthly_climate$date[i])
}
monthly_climate$lat <- NULL
monthly_climate$lon <- NULL
monthly_climate$date <- NULL
monthly_climate$year <- year(monthly_climate$date)
monthly_climate$month <- month(monthly_climate$date)
factor(monthly_climate$month, labels = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL",
"AUG", "SEP", "OCT", "NOV", "DEC"))
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMin), ]
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMax), ]
class(length(monthly_climate$date))
for (i in 1 : length(monthly_climate$date)) {
print(monthly_climate$date[i])
monthly_climate$date[i] <- gsub("\\/", "\\-", monthly_climate$date[i])
print(daily_climate$date[i])
monthly_climate$date[i] <- gsub(" .[0-9].*\\:.*", "", monthly_climate$date[i])
print(monthly_climate$date[i])
monthly_climate$date[i] <- transfer2ymd(monthly_climate$date[i])
}
monthly_climate$lat <- NULL
monthly_climate$lon <- NULL
monthly_climate$date <- NULL
monthly_climate$year <- year(monthly_climate$date)
monthly_climate$month <- month(monthly_climate$date)
factor(monthly_climate$month, labels = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"))
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMin), ]
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMax), ]
class(length(monthly_climate$date))
for (i in 1 : length(monthly_climate$date)) {
print(monthly_climate$date[i])
monthly_climate$date[i] <- gsub("\\/", "\\-", monthly_climate$date[i])
print(daily_climate$date[i])
monthly_climate$date[i] <- gsub(" .[0-9].*\\:.*", "", monthly_climate$date[i])
print(monthly_climate$date[i])
monthly_climate$date[i] <- transfer2ymd(monthly_climate$date[i])
}
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMin), ]
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMax), ]
class(length(monthly_climate$date))
monthly_climate
monthly_climate <- data.frame(climate$DATE, climate$LATITUDE,
climate$LONGITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMaximumTemp, stringsAsFactors = F)
monthly_climate <- data.frame(climate$DATE, climate$LONGITUDE,
climate$LATITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMaximumTemp, stringsAsFactors = F)
colnames(monthly_climate) <- c("date", "lon", "lat", "monthlyMin", "monthlyMean", "monthlyMax")
monthly_climate
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMin), ]
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMax), ]
class(length(monthly_climate$date))
for (i in 1 : length(monthly_climate$date)) {
print(monthly_climate$date[i])
monthly_climate$date[i] <- gsub("\\/", "\\-", monthly_climate$date[i])
print(daily_climate$date[i])
monthly_climate$date[i] <- gsub(" .[0-9].*\\:.*", "", monthly_climate$date[i])
print(monthly_climate$date[i])
monthly_climate$date[i] <- transfer2ymd(monthly_climate$date[i])
}
monthly_climate
monthly_climate$lat <- NULL
monthly_climate$lon <- NULL
monthly_climate$date <- NULL
monthly_climate$year <- year(monthly_climate$date)
monthly_climate$month <- month(monthly_climate$date)
monthly_climate <- data.frame(climate$DATE, climate$LONGITUDE,
climate$LATITUDE, climate$MonthlyMaximumTemp, climate$MonthlyMeanTemp, climate$MonthlyMaximumTemp, stringsAsFactors = F)
colnames(monthly_climate) <- c("date", "lon", "lat", "monthlyMin", "monthlyMean", "monthlyMax")
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMin), ]
monthly_climate <- monthly_climate[!is.na(monthly_climate$monthlyMax), ]
class(length(monthly_climate$date))
for (i in 1 : length(monthly_climate$date)) {
print(monthly_climate$date[i])
monthly_climate$date[i] <- gsub("\\/", "\\-", monthly_climate$date[i])
print(daily_climate$date[i])
monthly_climate$date[i] <- gsub(" .[0-9].*\\:.*", "", monthly_climate$date[i])
print(monthly_climate$date[i])
monthly_climate$date[i] <- transfer2ymd(monthly_climate$date[i])
}
monthly_climate$lat <- NULL
monthly_climate$lon <- NULL
monthly_climate$year <- year(monthly_climate$date)
monthly_climate$month <- month(monthly_climate$date)
monthly_climate$date <- NULL
factor(monthly_climate$month, labels = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"))
monthly_climate
write.csv(monthly_climate, "/Users/mali/Documents/myGit/LRCrimeStudy/data/purged_monthly_climate_Of_LR_2015-2018.csv")
daily_temp <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/purged_daily_climate_Of_LR_2015-2018.csv",
head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
daily_temp
daily_tempdailyAvg <- (daily_temp$dailyMax + daily_temp$dailyMin) / 2
daily_tempdaily$Avg <- (daily_temp$dailyMax + daily_temp$dailyMin) / 2
daily_temp$dailyAvg <- (daily_temp$dailyMax + daily_temp$dailyMin) / 2
daily_temp
daily_temp
total_incidents
head(total_incidents)
head(total_incidents)
daily_total_crimes <- data.frame(total_incidents$incidents_ymd, total_incidents$incidents_Number)
daily_total_crimes
daily_total_crimes <- aggregate(daily_total_crimes$total_incidents.incidents_Number, by = list(daily_total_crimes$total_incidents.incidents_ymd), FUN = length)
daily_total_crimes
colnames(daily_total_crimes) <- c("date", "daily_total")
daily_total_crimes
head(daily_total_crimes)
head(daily_temp)
daily_temp$X <- NULL
head(daily_total_crimes)
head(daily_temp)
ymd(daily_total_crimes)
colnames(daily_temp) <- c("date", "min", "max", "avg")
daily_temp
colnames(daily_temp) <- c("date", "min", "max", "avg")
daily_total_crimes$date[1] == daily_temp$date[1]
class(daily_total_crimes$date[1])
class(daily_temp$date[1])
str(daily_total_crimes$date[1])
daily_total_crimes$key <- data.frame(levels(daily_total_crimes$date), stringsAsFactors = FALSE)
daily_total_crimes$key
setwd("/Users/mali/Documents/myGit/LRCrimeStudy/code")
library(lubridate)
library(reshape)
library(stringr)
tmp_2017_2018 <- read.table("/Users/mali/Documents/myGit/LRCrimeStudy/data/Little_Rock_Police_Department_Statistics_2017_to_Year_to_Date_2018.csv",
head=TRUE, sep=",", fill=TRUE, stringsAsFactors=F)
tmp_2017_2018$INCIDENT_DATE <- gsub("\\/", "\\-", tmp_2017_2018$INCIDENT_DATE)
tmp_2017_2018$ymd <- mdy_hms(tmp_2017_2018$INCIDENT_DATE)
tmp_2017_2018$month <- month(tmp_2017_2018$ymd, label = TRUE)
tmp_2017_2018$year <- year(tmp_2017_2018$ymd)
tmp_2017_2018$wday <- wday(tmp_2017_2018$ymd, label = TRUE)
tmp_2017_2018$hour <- hour(tmp_2017_2018$ymd)
tmp_2017_2018$ymd <- ymd(tmp_2017_2018)
tmp_2017_2018$ymd
tmp_2017_2018$hour
tmp_2017_2018$INCIDENT_DATE <- gsub("\\/", "\\-", tmp_2017_2018$INCIDENT_DATE)
tmp_2017_2018$ymd <- mdy_hms(tmp_2017_2018$INCIDENT_DATE)
tmp_2017_2018$month <- month(tmp_2017_2018$ymd, label = TRUE)
tmp_2017_2018$year <- year(tmp_2017_2018$ymd)
tmp_2017_2018$wday <- wday(tmp_2017_2018$ymd, label = TRUE)
tmp_2017_2018$hour <- hour(tmp_2017_2018$ymd)
for (i in 1 : length(tmp_2017_2018$ymd)) {
if (grepl(" ", tmp_2017_2018$ymd[i])) {
print(tmp_2017_2018$ymd[i])
gsub(" .*", "", tmp_2017_2018$ymd[i])
print(tmp_2017_2018$ymd[i])
}
}
for (i in 1 : length(tmp_2017_2018$ymd)) {
if (grepl(" ", tmp_2017_2018$ymd[i])) {
print(tmp_2017_2018$ymd[i])
tmp_2017_2018$ymd[i] <- gsub(" .*", "", tmp_2017_2018$ymd[i])
print(tmp_2017_2018$ymd[i])
}
}
tmp_2017_2018
for (i in 1 : length(tmp_2017_2018$ymd)) {
if (grepl(" ", tmp_2017_2018$ymd[i])) {
print(tmp_2017_2018$ymd[i])
tmp_2017_2018$ymd[i] <- gsub(" .*", "", tmp_2017_2018$ymd[i])
print(tmp_2017_2018$ymd[i])
}
}
tmp_2017_2018
for (i in 1 : length(tmp_2017_2018$ymd)) {
if (grepl(" [0-9].*", tmp_2017_2018$ymd[i])) {
print(tmp_2017_2018$ymd[i])
tmp_2017_2018$ymd[i] <- gsub(" .*", "", tmp_2017_2018$ymd[i])
print(tmp_2017_2018$ymd[i])
}
}
tmp_2017_2018
for (i in 1 : length(tmp_2017_2018$ymd)) {
if (grepl(" [0-9].*", tmp_2017_2018$ymd[i])) {
print(tmp_2017_2018$ymd[i])
tmp_2017_2018$ymd[i] <- gsub(" [0-9].*", "", tmp_2017_2018$ymd[i])
print(tmp_2017_2018$ymd[i])
}
}
tmp_2017_2018
tmp_2017_2018$ymd
for (i in 1 : length(tmp_2017_2018$ymd)) {
if (grepl("  [0-9].*", tmp_2017_2018$ymd[i])) {
print(tmp_2017_2018$ymd[i])
tmp_2017_2018$ymd[i] <- gsub(" [0-9].*", "", tmp_2017_2018$ymd[i])
print(tmp_2017_2018$ymd[i])
}
}
tmp_2017_2018
tmp_2017_2018$ymd
for (i in 1 : length(tmp_2017_2018$ymd)) {
if (grepl("  [0-9].*", tmp_2017_2018$ymd[i])) {
print(tmp_2017_2018$ymd[i])
tmp_2017_2018$ymd[i] <- gsub("[[:space:]][0-9].*", "", tmp_2017_2018$ymd[i])
print(tmp_2017_2018$ymd[i])
}
}
tmp_2017_2018
for (i in 1 : length(tmp_2017_2018$ymd)) {
if (grepl("[[:space:]][0-9].*", tmp_2017_2018$ymd[i])) {
print(tmp_2017_2018$ymd[i])
tmp_2017_2018$ymd[i] <- gsub("[[:space:]][0-9].*", "", tmp_2017_2018$ymd[i])
print(tmp_2017_2018$ymd[i])
}
}
tmp_2017_2018
class(tmp_2017_2018$ymd)
tmp_2017_2018$ymd <- as.character(tmp_2017_2018$ymd)
for (i in 1 : length(tmp_2017_2018$ymd)) {
if (grepl("[[:space:]][0-9].*", tmp_2017_2018$ymd[i])) {
print(tmp_2017_2018$ymd[i])
tmp_2017_2018$ymd[i] <- gsub("[[:space:]][0-9].*", "", tmp_2017_2018$ymd[i])
print(tmp_2017_2018$ymd[i])
}
}
tmp_2017 <- tmp_2017_2018[tmp_2017_2018$year == "2017", ]
tmp_2018 <- tmp_2017_2018[tmp_2017_2018$year == "2018", ]
tmp_2017
write.csv(tmp_2017, "/Users/mali/Documents/myGit/LRCrimeStudy/data/Little_Rock_Police_Department_Statistics_2017.csv")
write.csv(tmp_2018, "/Users/mali/Documents/myGit/LRCrimeStudy/data/Little_Rock_Police_Department_Statistics_2018.csv")
